// <auto-generated />
using ArtistApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArtistApi.Migrations
{
    [DbContext(typeof(ArtistDbContext))]
    [Migration("20240119162537_123")]
    partial class _123
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ArtistApi.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistId"), 1L, 1);

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            ArtistName = "Beatles"
                        },
                        new
                        {
                            ArtistId = 2,
                            ArtistName = "Creedense"
                        },
                        new
                        {
                            ArtistId = 3,
                            ArtistName = "The Script"
                        },
                        new
                        {
                            ArtistId = 4,
                            ArtistName = "McFly"
                        },
                        new
                        {
                            ArtistId = 5,
                            ArtistName = "Frank Sinatra"
                        },
                        new
                        {
                            ArtistId = 6,
                            ArtistName = "Steve Lacy"
                        });
                });

            modelBuilder.Entity("ArtistApi.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Name = "Pop"
                        },
                        new
                        {
                            GenreId = 2,
                            Name = "Rock"
                        },
                        new
                        {
                            GenreId = 3,
                            Name = "Jazz"
                        },
                        new
                        {
                            GenreId = 4,
                            Name = "Funck"
                        });
                });

            modelBuilder.Entity("ArtistApi.Models.Song", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SongId"), 1L, 1);

                    b.Property<int>("FK_ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("FK_GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("SongId");

                    b.HasIndex("FK_ArtistId");

                    b.HasIndex("FK_GenreId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            FK_ArtistId = 2,
                            FK_GenreId = 1,
                            Title = "Fortunate song"
                        },
                        new
                        {
                            SongId = 2,
                            FK_ArtistId = 1,
                            FK_GenreId = 2,
                            Title = "Let it be"
                        },
                        new
                        {
                            SongId = 3,
                            FK_ArtistId = 4,
                            FK_GenreId = 1,
                            Title = "All About You"
                        },
                        new
                        {
                            SongId = 4,
                            FK_ArtistId = 4,
                            FK_GenreId = 1,
                            Title = "Five Colours in Her Hair"
                        },
                        new
                        {
                            SongId = 5,
                            FK_ArtistId = 3,
                            FK_GenreId = 2,
                            Title = "Breakeven"
                        },
                        new
                        {
                            SongId = 6,
                            FK_ArtistId = 3,
                            FK_GenreId = 1,
                            Title = "Superheroes"
                        },
                        new
                        {
                            SongId = 7,
                            FK_ArtistId = 5,
                            FK_GenreId = 1,
                            Title = "My Way"
                        },
                        new
                        {
                            SongId = 8,
                            FK_ArtistId = 6,
                            FK_GenreId = 3,
                            Title = "Dark Red"
                        });
                });

            modelBuilder.Entity("ArtistApi.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "Admin",
                            DisplayName = "Administrator"
                        },
                        new
                        {
                            Username = "Guest",
                            DisplayName = "Guest"
                        });
                });

            modelBuilder.Entity("ArtistApi.Models.Song", b =>
                {
                    b.HasOne("ArtistApi.Models.Artist", "Artists")
                        .WithMany("Songs")
                        .HasForeignKey("FK_ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtistApi.Models.Genre", "Genres")
                        .WithMany("Songs")
                        .HasForeignKey("FK_GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artists");

                    b.Navigation("Genres");
                });

            modelBuilder.Entity("ArtistApi.Models.Artist", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("ArtistApi.Models.Genre", b =>
                {
                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
